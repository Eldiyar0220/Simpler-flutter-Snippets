{
    "Simpler Flutter Snippets Text": {
        "prefix": "ftxt -->",
        "body": [
            "${1:const} Text('${2:text}'),${0}"
        ],
        "description": "Default Text"
    },
    "Simpler Flutter Snippets Container": {
        "prefix": "fcontainer -->",
        "body": [
            "Container(",
            "\tcolor: Colors.blue,",
            "\theight: 50,",
            "\twidth: 50,",
            "\talignment: Alignment.center,",
            "),"
        ]
    },
    "Simpler Flutter Snippets navigation": {
        "prefix": "fnav -->",
        "body": [
            "Navigator.push(",
            "    context,",
            "    MaterialPageRoute(builder: (context) => ${1:SomePage}()),",
            ");"
        ]
    },
    "Simpler Flutter Snippets StateFullWidget": {
        "prefix": "stateFullWidget -->",
        "body": [
            "import 'package:flutter/material.dart';",
            "",
            "class ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}} extends StatefulWidget {",
            "\tconst ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}}({super.key});",
            "\t@override",
            "\tState<${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}}> createState() => _${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}}State();",
            "}",
            "",
            "class _${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}}State extends State<${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}}> {",
            "\t@override",
            "\tWidget build(BuildContext context) {",
            "\t\treturn Scaffold(",
            "\t\t\tappBar: AppBar(",
            "\t\t\t\ttitle: const Text('${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}}'),",
            "\t\t\t),",
            "\t\t\tbody: Container(),",
            "\t\t);",
            "\t}",
            "}"
        ]
    },
    "Simpler Flutter Snippets StateLessWidget": {
        "prefix": "stateLessWidget -->",
        "body": [
            "import 'package:flutter/material.dart';",
            "",
            "class ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}} extends StatelessWidget {",
            "\tconst ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}}({super.key});",
            "\t@override",
            "\tWidget build(BuildContext context) {",
            "\t\treturn Scaffold(",
            "\t\t\tappBar: AppBar(",
            "\t\t\t\ttitle: const Text('${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}}'),",
            "\t\t\t),",
            "\t\t\tbody: Container(),",
            "\t\t);",
            "\t}",
            "}"
        ]
    },
    "Simpler Flutter Snippets Icon": {
        "prefix": "fic -->",
        "body": [
            "const Icon(${1:Icons.clear});"
        ]
    },
    "Simpler Flutter Snippets IconButton": {
        "prefix": "ficbtn -->",
        "body": [
            "IconButton(",
            "\tonPressed: () {${1}},",
            "\ticon: const Icon(Icons.${2:add}),",
            "),"
        ]
    },
    "Simpler Flutter Snippets CrossAxisAlignment": {
        "prefix": "caaaaa -->",
        "body": [
            "crossAxisAlignment: CrossAxisAlignment.${1|baseline,end,start,stretch|},"
        ]
    },
    "Simpler Flutter Snippets MainAxisAlignment": {
        "prefix": "maaaaaa -->",
        "body": [
            "mainAxisAlignment: MainAxisAlignment.${1|center,end,spaceAround,spaceBetween,spaceEvenly|},"
        ]
    },
    "Simpler Flutter Snippets MainAxisSize.min": {
        "prefix": "mainAxi -->",
        "body": [
            "mainAxisSize: MainAxisSize.min"
        ]
    },
    "Simpler Flutter Snippets Scaffold": {
        "prefix": "fsaffold -->",
        "body": [
            "Scaffold(",
            "\tappBar: AppBar(",
            "\t\ttitle: const Text('${1:MiniDocumentations}'),",
            "\t),",
            "\tbody: Column(",
            "\t\tchildren: [",
            "\t\t\tContainer(),",
            "\t\t],",
            "\t),",
            ");"
        ]
    },
    "Simpler Flutter Snippets 1xx": {
        "prefix": "1xx -->",
        "body": [
            "const SizedBox(",
            "\twidth: 10,",
            "\theight: 10,",
            "),"
        ],
        "description": "10 Px in Width"
    },
    "Simpler Flutter Snippets 1 Shrink": {
        "prefix": "1xx -> Shrink",
        "body": [
            "const SizedBox.shrink()"
        ],
        "description": "10 Px in Width"
    },
    "Simpler Flutter Snippets GridView Builder": {
        "prefix": "gridViewB -->",
        "body": [
            "GridView.builder(",
            "\tgridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(",
            "\t  crossAxisCount: 2,",
            "\t),",
            "\titemCount: 2,",
            "\tshrinkWrap: true,",
            "\tphysics: const ScrollPhysics(),",
            "\titemBuilder: (BuildContext context, int index) {",
            "\t  return Container();",
            "\t},",
            ")"
        ]
    },
    "Simpler Flutter Snippets GridView Count": {
        "prefix": "gridViewC -->",
        "body": [
            "GridView.count(",
            "\tcrossAxisSpacing: 1,",
            "\tmainAxisSpacing: 2,",
            "\tcrossAxisCount: 2,",
            "\tchildren: [${1:}],",
            ")"
        ]
    },
    "Simpler Flutter Snippets ListView.Builder": {
        "prefix": "listViewB -->",
        "body": [
            "ListView.builder(",
            "\titemCount: ${1:1},",
            "\titemBuilder: (BuildContext context, int index) {",
            "\t\treturn ${2:};",
            "\t},",
            "),"
        ]
    },
    "Simpler Flutter Snippets ListView.Separated": {
        "prefix": "listViewS -->",
        "body": [
            "ListView.separated(",
            "\titemCount: ${1:1},",
            "\tseparatorBuilder: (BuildContext context, int index) {",
            "\t\treturn ${2:};",
            "\t},",
            "\titemBuilder: (BuildContext context, int index) {",
            "\t\treturn ${3:};",
            "\t},",
            "),"
        ]
    },
    "Simpler Flutter Snippets Margin and padding Only": {
        "prefix": "padding --> ",
        "body": "${1|padding:,margin:|} const EdgeInsets.all(10),"
    },
    "Simpler Flutter Snippets Material App": {
        "prefix": "mateApp -->",
        "description": "Create a MaterialApp",
        "body": [
            "import 'package:flutter/material.dart';",
            "",
            "void main() => runApp(const MyApp(),);",
            "",
            "class MyApp extends StatelessWidget {",
            "  const MyApp({super.key});",
            "",
            "  @override",
            "  Widget build(BuildContext context) {",
            "    return MaterialApp(",
            "      title: 'Material App',",
            "      home: Scaffold(",
            "        appBar: AppBar(",
            "          title: const Text('Material App Bar'),",
            "        ),",
            "        body: const Center(",
            "          child: Text('Hello World'),",
            "        ),",
            "      ),",
            "    );",
            "  }",
            "}"
        ]
    },
    "Simpler Flutter Snippets Cupertino App": {
        "prefix": "cupeApp -->",
        "description": "Create a CupertinoApp",
        "body": [
            "import 'package:flutter/cupertino.dart';",
            "",
            "void main() => runApp(const MyApp());",
            "",
            "class MyApp extends StatelessWidget {",
            "  const MyApp({super.key});",
            "",
            "  @override",
            "  Widget build(BuildContext context) {",
            "    return const CupertinoApp(",
            "      title: 'Cupertino App',",
            "      home: CupertinoPageScaffold(",
            "        navigationBar: CupertinoNavigationBar(",
            "          middle: Text('Cupertino App Bar'),",
            "        ),",
            "        child: Center(",
            "          child: Text('Hello World'),",
            "        ),",
            "      ),",
            "    );",
            "  }",
            "}"
        ]
    },
    "Simpler Flutter Snippets `all`": {
        "prefix": "fedgeAll -->",
        "body": [
            "EdgeInsets.all(${1:32.0})${0}"
        ]
    },
    "Simpler Flutter Snippets `only`": {
        "prefix": "fedgeOnly -->",
        "body": [
            "const EdgeInsets.only(",
            "    right: 10,",
            "    left: 10,",
            "    top: 10,",
            "    bottom: 10,",
            "  ),"
        ]
    },
    "Simpler Flutter Snippets `symmetric`": {
        "prefix": "fedgSym -->",
        "body": [
            "const EdgeInsets.symmetric(vertical: ${1:8}, horizontal: ${1:8},),${0}"
        ]
    },
    "Simpler Flutter Snippets svgFlutter": {
        "prefix": "fsvg -->",
        "body": [
            "SvgPicture.asset($1)"
        ]
    },
    "Simpler Flutter Snippets ElevatedButton snippet": {
        "prefix": "felebtn -->",
        "body": [
            "ElevatedButton(",
            "  child: const Text('${1:Button label}'),",
            "  onPressed: () {},",
            ")${0}"
        ]
    },
    "Simpler Flutter Snippets Image": {
        "prefix": "fimg -->",
        "body": [
            "Image${1|.asset(Images.aDone),.network(' ')|};"
        ]
    },
    "Simpler Flutter Snippets locale": {
        "prefix": "flocale -->",
        "body": [
            "LocaleKeys.$1.tr(),"
        ],
        "description": "do not use ---'someText'.tr()--- "
    },
    "Simpler Flutter Snippets logger simple": {
        "prefix": "dddddddddddddddddLog --->",
        "body": [
            "log('data: ${1|name,${ }|}');"
        ]
    },
    "Simpler Flutter Snippets repo dart": {
        "prefix": "repo -->",
        "body": [
            "import 'package:injectable/injectable.dart';",
            "",
            "abstract class ${2:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}} {}",
            "",
            "@Singleton(as: $2)",
            "class $2Impl implements $2 {",
            "  $2Impl(this._dioGenerator);",
            "  final DioGenerator _dioGenerator;",
            "}"
        ]
    },
    "Simpler Flutter Snippets into dart": {
        "prefix": "into -->",
        "body": [
            "import 'package:injectable/injectable.dart';",
            "",
            "abstract class ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}} {}",
            "",
            "@Singleton(as: $1)",
            "class $1Impl implements $1 {",
            "  $1Impl(this._repository);",
            "  final   _repository;",
            "}"
        ]
    },
    "Simpler Flutter Snippets userCase dart": {
        "prefix": "usecase -->",
        "body": [
            "class ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}} {",
            "  ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}}(this._repository);",
            "  final  _repository;",
            "}"
        ]
    },
    "Simpler Flutter Snippets controller xe xe": {
        "prefix": "fcontroller -->",
        "body": [
            "late FocusNode _focusNode;",
            "late GlobalKey<FormState> _formKey;",
            "late TextEditingController _$Controller;",
            "",
            "@override",
            "void initState() {",
            "\tsuper.initState();",
            "\t_formKey = GlobalKey<FormState>();",
            "\t_focusNode = FocusNode();",
            "\t_$Controller = TextEditingController();",
            "}",
            "",
            "@override",
            "void dispose() {",
            "\t_$Controller.dispose();",
            "\t_focusNode.dispose();",
            "\tsuper.dispose();",
            "}"
        ]
    },
    "Simpler Flutter Snippets context read": {
        "prefix": "context --> read",
        "body": [
            "context.read<${1:${CLIPBOARD}}>().add($2);"
        ]
    },
    "Simpler Flutter Snippets context push": {
        "prefix": "context --> router",
        "body": [
            "context.router.${1|push(),pop(),pushAndRemoveUntil(),pushAndPopUntil(route predicate: (Route<dynamic> route) =>route.settings.name == EsiLoginPageRoute.name);,popUntil((Route<dynamic> route) => route.settings.name == EsiLoginPageRoute.name)|};"
        ]
    },
    "Simpler Flutter Snippets Get It": {
        "prefix": "getttttt -->",
        "body": [
            "GetIt.I<$1>()..add()"
        ]
    },
    "Simpler Flutter Snippets toString": {
        "prefix": "toStr -->",
        "body": [
            "@override",
            "String toString() => '${1:toString}';"
        ]
    },
    "Simpler Flutter Snippets dialog dateTime": {
        "prefix": "fSimplerFlutterReCase -->",
        "body": [
            "// '1  camelCase    ->   justSomeSampleText",
            "// '2  constantCase ->   JUST_SOME_SAMPLE_TEXT",
            "// '3  sentenceCase ->   Just some sample text",
            "// '4  snakeCase    ->   just_some_sample_text",
            "// '5  dotCase      ->   just.some.sample.text",
            "// '6  paramCase    ->   just-some-sample-text",
            "// '7  pathCase     ->   just/some/sample/text",
            "// '8  pascalCase   ->   JustSomeSampleText",
            "// '9  headerCase   ->   Just-Some-Sample-Text",
            "// '10 titleCase    ->   Just Some Sample Text"
        ]
    },
    "Simpler Flutter Snippets PageView Builder": {
        "prefix": "pageViewB -->",
        "body": [
            "PageView.builder(",
            "\titemCount: ${1:3},",
            "\titemBuilder: (context, index) {",
            "\t\treturn ${2:Container(",
            "\t\t\tmargin: EdgeInsets.symmetric(horizontal: 10, vertical: 10),",
            "\t\t\tdecoration: BoxDecoration(",
            "\t\t\t\tcolor: Colors.purple,",
            "\t\t\t\tborderRadius: BorderRadius.circular(10),",
            "\t\t\t),",
            "\t\t\tchild: Text(",
            "\t\t\t\t\"PageView\",",
            "\t\t\t\tstyle: TextStyle(color: Colors.white),",
            "\t\t\t),",
            "\t\t)};",
            "\t},",
            ")"
        ],
        "description": "PageView Builder"
    },
    "Simpler Flutter Snippets Border Radius Circular": {
        "prefix": "borderCircular -->",
        "body": "borderRadius: BorderRadius.circular(${1:10}),",
        "description": "Border Radius Circular"
    },
    "Simpler Flutter Snippets Border Radius All": {
        "prefix": "borderAll -->",
        "body": "borderRadius: BorderRadius.all(Radius.circular(${1:10})),",
        "description": "Border Radius All"
    },
    "Simpler Flutter Snippets TextStyle property": {
        "prefix": "fstyle -->",
        "body": [
            "TextStyle(",
            "\tcolor: Colors.red,",
            "\tfontWeight: FontWeight.w500,",
            "\tfontSize: 15,",
            "\theight: 0.25, // size / lineHeight = 0.25",
            "\toverflow: TextOverflow.ellipsis,",
            "\t${2:decoration: TextDecoration.underline,}",
            "),"
        ]
    },
    "Simpler Flutter Snippets Show Dialog Method": {
        "prefix": "fshowDialog -->",
        "body": [
            " showDialog(",
            "    context: context,",
            "    useSafeArea: true,",
            "    barrierDismissible: false,",
            "    builder: (context) {",
            "    return AlertDialog(",
            "       title: Text('Title'),",
            "       content: Text('Content'),",
            "       );",
            "     },",
            "   );"
        ],
        "description": "Show Dialog Method"
    }
}